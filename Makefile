# ========= –ü–ê–†–ê–ú–ï–¢–†–´ =========
NAME        := enkeym
IMAGE       := enkeym           # –∏–º—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ nginx (—Ç—ã –µ–≥–æ —Å–æ–±–∏—Ä–∞–µ—à—å –Ω–∏–∂–µ)
PORT        := 8080             # –≤–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç –¥–ª—è http (—Ä–µ–∂–∏–º –±–µ–∑ SSL)
DOMAIN      := enkeym.site
DOMAIN_WWW  := www.enkeym.site
LE_DIR      := /etc/letsencrypt
LE_LIVE_DIR := $(LE_DIR)/live/$(DOMAIN)
CERTBOT_IMG := certbot/certbot
CERTBOT_EMAIL := you@example.com   # <<<<< –ü–û–ú–ï–ù–Ø–ô

# ========= –£–¢–ò–õ–ò–¢–´ =========
DOCKER := sudo docker

# ========= –•–ï–õ–ü–ï–†–´ =========
.PHONY: help
help:
	@echo "make build         - —Å–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑"
	@echo "make run           - –∑–∞–ø—É—Å—Ç–∏—Ç—å HTTP (–±–µ–∑ SSL) –Ω–∞ $(PORT)"
	@echo "make ssl-run       - –∑–∞–ø—É—Å—Ç–∏—Ç—å HTTPS c –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º LE"
	@echo "make stop/start/restart/rm/logs/ps/debug - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
	@echo "make cert-issue    - –í–´–ü–£–°–¢–ò–¢–¨ –Ω–æ–≤—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã (standalone, –ø–æ—Ä—Ç 80)"
	@echo "make cert-renew    - –ü–†–û–î–õ–ò–¢–¨ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã (standalone, –ø–æ—Ä—Ç 80)"
	@echo "make cert-show     - –ø–æ–∫–∞–∑–∞—Ç—å –¥–∞—Ç—ã –∏ –ø—Ä–µ–¥–º–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
	@echo "make cron-install  - –ø—Ä–æ–ø–∏—Å–∞—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –≤ cron"
	@echo "make clean         - —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä/–æ–±—Ä–∞–∑ –∏ .next"

# ========= –°–ë–û–†–ö–ê =========
.PHONY: clean
clean:
	-$(DOCKER) stop $(NAME) || true
	-$(DOCKER) rm $(NAME) || true
	-$(DOCKER) rmi $(IMAGE) || true
	sudo rm -rf .next

.PHONY: build
build:
	sudo docker system prune -af --volumes
	# –µ—Å–ª–∏ —É —Ç–µ–±—è –¥–≤–∞ Dockerfile, –æ—Å—Ç–∞–≤—å –æ–¥–∏–Ω –Ω—É–∂–Ω—ã–π; –Ω–∏–∂–µ –¥–≤–∞ –±–∏–ª–¥–∞ –∫–∞–∫ –±—ã–ª–æ
	sudo docker build -t enkeym-app .
	sudo docker build -t $(IMAGE) .

# ========= –ó–ê–ü–£–°–ö =========
.PHONY: run
run:
	$(DOCKER) run -d \
		--restart unless-stopped \
		-p $(PORT):80 \
		--env-file .env \
		--name $(NAME) \
		$(IMAGE)

.PHONY: ssl-run
ssl-run:
	-$(DOCKER) stop $(NAME) || true
	-$(DOCKER) rm $(NAME) || true
	# –í–ê–ñ–ù–û: –º–æ–Ω—Ç–∏—Ä—É–µ–º live-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é LE (–≤–Ω—É—Ç—Ä–∏ ‚Äî symlink-—ã –Ω–∞ archive)
	$(DOCKER) run -d \
		--restart unless-stopped \
		-p 80:80 \
		-p 443:443 \
		-v $(LE_LIVE_DIR):/etc/nginx/ssl:ro \
		--env-file .env \
		--name $(NAME) \
		$(IMAGE)

.PHONY: restart
restart:
	$(DOCKER) restart $(NAME)

.PHONY: stop
stop:
	$(DOCKER) stop $(NAME)

.PHONY: start
start:
	$(DOCKER) start $(NAME)

.PHONY: rm
rm:
	$(DOCKER) rm $(NAME)

.PHONY: logs
logs:
	$(DOCKER) logs -f $(NAME)

.PHONY: ps
ps:
	$(DOCKER) ps -a

# ========= SSL / CERTBOT =========
# –ü–µ—Ä–µ–¥ –≤—ã–¥–∞—á–µ–π/–ø—Ä–æ–¥–ª–µ–Ω–∏–µ–º: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å nginx –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–æ—Ä—Ç 80 —Å–≤–æ–±–æ–¥–µ–Ω.
.PHONY: cert-issue
cert-issue:
	-$(DOCKER) stop $(NAME) || true
	$(DOCKER) run --rm -it -p 80:80 \
	  -v $(LE_DIR):/etc/letsencrypt \
	  $(CERTBOT_IMG) certonly --standalone \
	  -d $(DOMAIN) -d $(DOMAIN_WWW) \
	  --agree-tos -m $(CERTBOT_EMAIL) --non-interactive
	@echo "OK. –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏: make ssl-run"

.PHONY: cert-renew
cert-renew:
	-$(DOCKER) stop $(NAME) || true
	$(DOCKER) run --rm -it -p 80:80 \
	  -v $(LE_DIR):/etc/letsencrypt \
	  $(CERTBOT_IMG) renew --standalone
	@echo "Renew –∑–∞–≤–µ—Ä—à—ë–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é nginx (–µ—Å–ª–∏ –µ—Å—Ç—å)‚Ä¶"
	-$(DOCKER) start $(NAME) || true
	-$(DOCKER) exec $(NAME) nginx -s reload || true

.PHONY: cert-show
cert-show:
	@if [ -f "$(LE_LIVE_DIR)/fullchain.pem" ]; then \
	  openssl x509 -in $(LE_LIVE_DIR)/fullchain.pem -noout -dates -issuer -subject ; \
	else \
	  echo "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: $(LE_LIVE_DIR)/fullchain.pem"; \
	fi

.PHONY: cron-install
cron-install:
	@echo "–°–æ–∑–¥–∞—é /etc/cron.d/certbot-docker‚Ä¶"
	@sudo bash -c 'cat > /etc/cron.d/certbot-docker <<CRON
SHELL=/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
# –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 03:00 –ø—ã—Ç–∞–µ–º—Å—è renew, –ø–æ—Ç–æ–º –º—è–≥–∫–∏–π reload nginx
0 3 * * * root $(DOCKER) run --rm -p 80:80 -v $(LE_DIR):/etc/letsencrypt $(CERTBOT_IMG) renew --standalone && $(DOCKER) exec $(NAME) nginx -s reload
CRON'
	@sudo chmod 644 /etc/cron.d/certbot-docker
	@sudo systemctl restart cron || sudo service cron restart
	@echo "–ì–æ—Ç–æ–≤–æ."

# ========= –û–¢–õ–ê–î–ö–ê =========
.PHONY: debug
debug:
	@echo "\nüîç –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä:"
	$(DOCKER) ps -a | grep $(NAME) || echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"

	@echo "\nüîç –ü–æ—Ä—Ç—ã –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
	-$(DOCKER) exec -it $(NAME) sh -c 'command -v netstat >/dev/null && netstat -tulpn | grep -E ":80|:443" || ss -tulpn | grep -E ":80|:443"' || echo "‚ùå –ù–µ—Ç netstat/ss –∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"

	@echo "\nüìÇ /usr/share/nginx/html:"
	-$(DOCKER) exec -it $(NAME) ls -lah /usr/share/nginx/html | head -n 20

	@echo "\nüìÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
	-$(DOCKER) exec -it $(NAME) ls -lah /etc/nginx/ssl || echo "‚ùå –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã"

	@echo "\nüß™ TLS c–Ω–∞—Ä—É–∂–∏ (s_client):"
	-echo | openssl s_client -connect $(DOMAIN):443 -servername $(DOMAIN) 2>/dev/null | openssl x509 -noout -dates -subject -issuer || echo "‚ùå s_client –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"

	@echo "\nüìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 –ª–æ–≥–æ–≤:"
	-$(DOCKER) logs --tail=50 $(NAME) || echo "‚ùå –ù–µ—Ç –ª–æ–≥–æ–≤"
