worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log /dev/stdout;
  error_log /dev/stderr warn;

  sendfile on;
  keepalive_timeout 65;
  server_tokens off;

  # --- GZIP ---
  gzip on;
  gzip_static on;
  gzip_comp_level 6;
  gzip_min_length 1024;
  gzip_proxied any;
  gzip_types
    text/plain
    text/css
    application/javascript
    application/x-javascript
    text/javascript
    application/json
    image/svg+xml;

  # --- BROTLI (требует модуль ngx_brotli) ---
  brotli on;
  brotli_static on;
  brotli_comp_level 6;
  brotli_min_length 1024;
  brotli_buffers 32 8k;
  brotli_types
    text/plain
    text/css
    application/javascript
    application/x-javascript
    text/javascript
    application/json
    application/xml
    image/svg+xml
    application/rss+xml
    application/atom+xml
    font/ttf
    font/otf
    font/woff
    font/woff2
    application/vnd.ms-fontobject
    image/x-icon;

  # --- HTTPS (non-www) ---
  server {
    listen 443 ssl http2;
    server_name enkeym.site;

    ssl_certificate     /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    root /usr/share/nginx/html;
    index index.html;

    # --- Security headers ---
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;

    # --- Favicon / SEO / OG / PWA файлы ---
    location = /favicon.ico              { access_log off; log_not_found off; }
    location = /favicon.svg              { access_log off; log_not_found off; }
    location = /favicon.png              { access_log off; log_not_found off; }
    location = /apple-touch-icon.png     { access_log off; log_not_found off; }
    location = /safari-pinned-tab.svg    { access_log off; log_not_found off; }
    location = /site.webmanifest         { access_log off; log_not_found off; }
    location = /manifest.json            { access_log off; log_not_found off; }
    location = /robots.txt               { access_log off; log_not_found off; }
    location = /sitemap.xml              { access_log off; log_not_found off; }
    location = /sitemap-0.xml            { access_log off; log_not_found off; }
    location = /og-image.jpg             { access_log off; log_not_found off; }
    location = /og-image.avif            { access_log off; log_not_found off; }
    location = /og-image.png             { access_log off; log_not_found off; }
    location = /preview-player.html      { access_log off; log_not_found off; }
    location ~* /(google|yandex)[\w\-.]*\.html$ {
      access_log off; log_not_found off;
    }

    # --- CORS для manifest и SVG ---
    location ~* \.(webmanifest|svg)$ {
      add_header Access-Control-Allow-Origin *;
      try_files $uri =404;
    }

    # --- Next.js static ---
    location /_next/static {
      access_log off;
      add_header Cache-Control "public, max-age=31536000, immutable";
      add_header Vary Accept-Encoding;
      try_files $uri $uri.br $uri.gz =404;
    }

    # --- Статика: js, css, шрифты, картинки ---
    location ~* \.(?:js|css|svg|woff2?|woff|ttf|eot|png|jpe?g|gif|webp|avif|json|html)$ {
      access_log off;
      add_header Cache-Control "public, max-age=31536000, immutable";
      add_header Vary Accept-Encoding;
      try_files $uri $uri.br $uri.gz =404;
    }

    # --- Fallback под SPA ---
    location / {
      try_files $uri $uri/ /index.html;
    }
  }

  # --- HTTPS (www) → non-www редирект ---
  server {
    listen 443 ssl http2;
    server_name www.enkeym.site;

    ssl_certificate     /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    return 301 https://enkeym.site$request_uri;
  }

  # --- HTTP → HTTPS редирект ---
  server {
    listen 80;
    server_name enkeym.site www.enkeym.site;

    return 301 https://enkeym.site$request_uri;
  }
}
